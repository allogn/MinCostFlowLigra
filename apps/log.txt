New iteration: e = 3
#0 (0, supply: 1):	
    OUT:
        1 (w: 1;  f: 0;  c: 1;  l: 0)
        2 (w: 1;  f: 0;  c: 1;  l: 0)
    IN:
#1 (0, supply: 0):	
    OUT:
        3 (w: 2;  f: 0;  c: 1;  l: 0)
        4 (w: 1;  f: 0;  c: 1;  l: 0)
    IN:
        0 (w: 1;  f: 0;  c: 1;  l: 0)
#2 (0, supply: 0):	
    OUT:
        3 (w: 1;  f: 0;  c: 1;  l: 0)
        4 (w: 2;  f: 0;  c: 1;  l: 0)
    IN:
        0 (w: 1;  f: 0;  c: 1;  l: 0)
#3 (0, supply: 0):	
    OUT:
        5 (w: 3;  f: 0;  c: 1;  l: 0)
    IN:
        1 (w: 2;  f: 0;  c: 1;  l: 0)
        2 (w: 1;  f: 0;  c: 1;  l: 0)
#4 (0, supply: 0):	
    OUT:
        5 (w: 1;  f: 0;  c: 1;  l: 0)
    IN:
        1 (w: 1;  f: 0;  c: 1;  l: 0)
        2 (w: 2;  f: 0;  c: 1;  l: 0)
#5 (0, supply: -1):	
    OUT:
    IN:
        3 (w: 3;  f: 0;  c: 1;  l: 0)
        4 (w: 1;  f: 0;  c: 1;  l: 0)
0->1 admissible: 0(c_p = 1, residual: 1)
c_p(0,1) = 1
0->2 admissible: 0(c_p = 1, residual: 1)
c_p(0,2) = 1
1->3 admissible: 0(c_p = 2, residual: 1)
c_p(1,3) = 2
1->4 admissible: 0(c_p = 1, residual: 1)
c_p(1,4) = 1
2->3 admissible: 0(c_p = 1, residual: 1)
c_p(2,3) = 1
2->4 admissible: 0(c_p = 2, residual: 1)
c_p(2,4) = 2
3->5 admissible: 0(c_p = 3, residual: 1)
c_p(3,5) = 3
4->5 admissible: 0(c_p = 1, residual: 1)
c_p(4,5) = 1
Inverted:
1<-0 admissible: 0(c_p = -1, residual: 0)
c_p(0,1) = -1
2<-0 admissible: 0(c_p = -1, residual: 0)
c_p(0,2) = -1
3<-1 admissible: 0(c_p = -2, residual: 0)
c_p(1,3) = -2
3<-2 admissible: 0(c_p = -1, residual: 0)
c_p(2,3) = -1
4<-1 admissible: 0(c_p = -1, residual: 0)
c_p(1,4) = -1
4<-2 admissible: 0(c_p = -2, residual: 0)
c_p(2,4) = -2
5<-3 admissible: 0(c_p = -3, residual: 0)
c_p(3,5) = -3
5<-4 admissible: 0(c_p = -1, residual: 0)
c_p(4,5) = -1
Calculate excesses...
excesses: 0:1 1:0 2:0 3:0 4:0 5:0 
deficits: 0:0 1:0 2:0 3:0 4:0 5:1 
Raise potentials...
got new forward residual edge: 0->1 length: 1
got new forward residual edge: 0->2 length: 1
got new forward residual edge: 1->3 length: 1
got new forward residual edge: 1->4 length: 1
got new forward residual edge: 2->3 length: 1
got new forward residual edge: 2->4 length: 1
got new forward residual edge: 3->5 length: 2
got new forward residual edge: 4->5 length: 1
Shortest path done. MaxLength = 0
0:0 1:1 2:1 3:2 4:2 5:3 
  DFS 0:
0->1 admissible: 0(c_p = 1, residual: 1)
0->2 admissible: 0(c_p = 1, residual: 1)
Blocking flow array: 0:18446744073709551615 1:18446744073709551615 2:18446744073709551615 3:18446744073709551615 4:18446744073709551615 5:18446744073709551615 
blocking flow done.
