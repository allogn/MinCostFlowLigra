New iteration: e = 100
#0 (0, supply: 1):	
    OUT:
        1 (w: 1;  f: 0;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
#1 (0, supply: 0):	
    OUT:
        2 (w: 1;  f: 0;  c: 1;  l: 0)
        3 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
        0 (w: 1;  f: 0;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
#2 (0, supply: 0):	
    OUT:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        3 (w: 1;  f: 0;  c: 1;  l: 0)
    IN:
        0 (w: 100;  f: 0;  c: 1;  l: 0)
        1 (w: 1;  f: 0;  c: 1;  l: 0)
#3 (0, supply: -1):	
    OUT:
    IN:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        2 (w: 1;  f: 0;  c: 1;  l: 0)
0->1 admissible: 0(c_p = 1, residual: 1)
c_p(0,1) = 1
0->2 admissible: 0(c_p = 100, residual: 1)
c_p(0,2) = 100
1->2 admissible: 0(c_p = 1, residual: 1)
c_p(1,2) = 1
1->3 admissible: 0(c_p = 100, residual: 1)
c_p(1,3) = 100
2->1 admissible: 0(c_p = 100, residual: 1)
c_p(2,1) = 100
2->3 admissible: 0(c_p = 1, residual: 1)
c_p(2,3) = 1
Inverted:
1<-0 admissible: 0(c_p = -1, residual: 0)
c_p(0,1) = 1
1<-2 admissible: 0(c_p = -100, residual: 0)
c_p(2,1) = 100
2<-0 admissible: 0(c_p = -100, residual: 0)
c_p(0,2) = 100
2<-1 admissible: 0(c_p = -1, residual: 0)
c_p(1,2) = 1
3<-1 admissible: 0(c_p = -100, residual: 0)
c_p(1,3) = 100
3<-2 admissible: 0(c_p = -1, residual: 0)
c_p(2,3) = 1
Calculate excesses...
excesses: 0:1 1:0 2:0 3:0 
deficits: 0:0 1:0 2:0 3:1 
Raise potentials...
got new forward residual edge: 0->1 length: 2
got new forward residual edge: 0->2 length: 2
got new forward residual edge: 1->2 length: 2
got new forward residual edge: 1->3 length: 2
got new forward residual edge: 2->1 length: 2
got new forward residual edge: 2->3 length: 2
Shortest path done. MaxLength = 4
0:0 1:2 2:2 3:4 
  DFS 0:
0->1 admissible: 1(c_p = -199, residual: 1)
0->2 admissible: 1(c_p = -100, residual: 1)
1->2 admissible: 0(c_p = 1, residual: 1)
1->3 admissible: 1(c_p = -100, residual: 1)
Blocking flow array: 0:2147483647 1:0 2:0 3:1 
blocking flow done.
Paths: 
3<-1<-0
Raising flows... Path:
Node: 3:
1->2 admissible: 0(c_p = 1, residual: 1)
1->3 admissible: 1(c_p = -100, residual: 1)
Node: 1:
0->1 admissible: 1(c_p = -199, residual: 1)
Iteration finished. Final excess: 0
#0 (400, supply: 1):	
    OUT:
        1 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
#1 (200, supply: 0):	
    OUT:
        2 (w: 1;  f: 0;  c: 1;  l: 0)
        3 (w: 100;  f: 1;  c: 1;  l: 0)
    IN:
        0 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
#2 (200, supply: 0):	
    OUT:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        3 (w: 1;  f: 0;  c: 1;  l: 0)
    IN:
        0 (w: 100;  f: 0;  c: 1;  l: 0)
        1 (w: 1;  f: 0;  c: 1;  l: 0)
#3 (0, supply: -1):	
    OUT:
    IN:
        1 (w: 100;  f: 1;  c: 1;  l: 0)
        2 (w: 1;  f: 0;  c: 1;  l: 0)
Calculate excesses...
excesses: 0:0 1:0 2:0 3:0 
deficits: 0:0 1:0 2:0 3:0 
New iteration: e = 50
#0 (400, supply: 1):	
    OUT:
        1 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
#1 (200, supply: 0):	
    OUT:
        2 (w: 1;  f: 0;  c: 1;  l: 0)
        3 (w: 100;  f: 1;  c: 1;  l: 0)
    IN:
        0 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
#2 (200, supply: 0):	
    OUT:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        3 (w: 1;  f: 0;  c: 1;  l: 0)
    IN:
        0 (w: 100;  f: 0;  c: 1;  l: 0)
        1 (w: 1;  f: 0;  c: 1;  l: 0)
#3 (0, supply: -1):	
    OUT:
    IN:
        1 (w: 100;  f: 1;  c: 1;  l: 0)
        2 (w: 1;  f: 0;  c: 1;  l: 0)
0->1 admissible: 0(c_p = -199, residual: 0)
c_p(0,1) = -199
0->2 admissible: 1(c_p = -100, residual: 1)
c_p(0,2) = -100
1->2 admissible: 0(c_p = 1, residual: 1)
c_p(1,2) = 1
1->3 admissible: 0(c_p = -100, residual: 0)
c_p(1,3) = -100
2->1 admissible: 0(c_p = 100, residual: 1)
c_p(2,1) = 100
2->3 admissible: 1(c_p = -199, residual: 1)
c_p(2,3) = -199
Inverted:
1<-0 admissible: 0(c_p = 199, residual: 1)
c_p(0,1) = 201
1<-2 admissible: 0(c_p = -100, residual: 0)
c_p(2,1) = 100
2<-0 admissible: 0(c_p = 100, residual: 1)
c_p(0,2) = 300
2<-1 admissible: 0(c_p = -1, residual: 0)
c_p(1,2) = 1
3<-1 admissible: 0(c_p = 100, residual: 1)
c_p(1,3) = 300
3<-2 admissible: 0(c_p = 199, residual: 1)
c_p(2,3) = 201
Calculate excesses...
excesses: 0:0 1:0 2:0 3:1 
deficits: 0:1 1:0 2:0 3:0 
Raise potentials...
got new backward residual edge: 1<-3 length: 3 c_p:100
got new backward residual edge: 2<-3 length: 5 c_p:199
got new forward residual edge: 1->2 length: 2
got new backward residual edge: 0<-1 length: 5 c_p:199
got new forward residual edge: 2->1 length: 3
got new backward residual edge: 0<-2 length: 3 c_p:100
Shortest path done. MaxLength = 8
0:8 1:3 2:5 3:0 
  DFS 3:
3<-1 admissible: 1(c_p = -50, residual: 1)
3<-2 admissible: 1(c_p = -51, residual: 1)
1->2 admissible: 1(c_p = -99, residual: 1)
1->3 admissible: 0(c_p = 50, residual: 0)
1<-0 admissible: 1(c_p = -51, residual: 1)
Blocking flow array: 0:1 1:3 2:3 3:2147483647 
blocking flow done.
Paths: 
0<-1<-3
Raising flows... Path:
Node: 0:
1->2 admissible: 1(c_p = -99, residual: 1)
1->3 admissible: 0(c_p = 50, residual: 0)
1<-0 admissible: 1(c_p = -51, residual: 1)
Node: 1:
3<-1 admissible: 1(c_p = -50, residual: 1)
Iteration finished. Final excess: 3
#0 (400, supply: 1):	
    OUT:
        1 (w: 1;  f: 0;  c: 1;  l: 0)
        2 (w: 100;  f: 1;  c: 1;  l: 0)
    IN:
#1 (450, supply: 0):	
    OUT:
        2 (w: 1;  f: 0;  c: 1;  l: 0)
        3 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
        0 (w: 1;  f: 0;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
#2 (350, supply: 0):	
    OUT:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        3 (w: 1;  f: 1;  c: 1;  l: 0)
    IN:
        0 (w: 100;  f: 1;  c: 1;  l: 0)
        1 (w: 1;  f: 0;  c: 1;  l: 0)
#3 (400, supply: -1):	
    OUT:
    IN:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        2 (w: 1;  f: 1;  c: 1;  l: 0)
Calculate excesses...
excesses: 0:0 1:0 2:0 3:0 
deficits: 0:0 1:0 2:0 3:0 
New iteration: e = 25
#0 (400, supply: 1):	
    OUT:
        1 (w: 1;  f: 0;  c: 1;  l: 0)
        2 (w: 100;  f: 1;  c: 1;  l: 0)
    IN:
#1 (450, supply: 0):	
    OUT:
        2 (w: 1;  f: 0;  c: 1;  l: 0)
        3 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
        0 (w: 1;  f: 0;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
#2 (350, supply: 0):	
    OUT:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        3 (w: 1;  f: 1;  c: 1;  l: 0)
    IN:
        0 (w: 100;  f: 1;  c: 1;  l: 0)
        1 (w: 1;  f: 0;  c: 1;  l: 0)
#3 (400, supply: -1):	
    OUT:
    IN:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        2 (w: 1;  f: 1;  c: 1;  l: 0)
0->1 admissible: 0(c_p = 51, residual: 1)
c_p(0,1) = 51
0->2 admissible: 0(c_p = 50, residual: 0)
c_p(0,2) = 50
1->2 admissible: 1(c_p = -99, residual: 1)
c_p(1,2) = -99
1->3 admissible: 0(c_p = 50, residual: 1)
c_p(1,3) = 50
2->1 admissible: 0(c_p = 200, residual: 1)
c_p(2,1) = 200
2->3 admissible: 0(c_p = 51, residual: 0)
c_p(2,3) = 51
Inverted:
1<-0 admissible: 0(c_p = -51, residual: 0)
c_p(0,1) = -49
1<-2 admissible: 0(c_p = -200, residual: 0)
c_p(2,1) = 0
2<-0 admissible: 1(c_p = -50, residual: 1)
c_p(0,2) = 150
2<-1 admissible: 0(c_p = 99, residual: 1)
c_p(1,2) = 101
3<-1 admissible: 0(c_p = -50, residual: 0)
c_p(1,3) = 150
3<-2 admissible: 1(c_p = -51, residual: 1)
c_p(2,3) = -49
Calculate excesses...
excesses: 0:1 1:0 2:1 3:0 
deficits: 0:0 1:1 2:0 3:1 
Raise potentials...
got new forward residual edge: 0->1 length: 4
got new forward residual edge: 0->2 length: 3
got new forward residual edge: 2->1 length: 9
got new forward residual edge: 2->3 length: 4
got new backward residual edge: 1<-2 length: 5 c_p:99
Shortest path done. MaxLength = 4
0:0 1:4 2:0 3:4 
  DFS 0:
0->1 admissible: 1(c_p = -49, residual: 1)
  DFS 2:
2->1 admissible: 0(c_p = 100, residual: 1)
2->3 admissible: 1(c_p = -49, residual: 1)
Blocking flow array: 0:2147483647 1:0 2:2147483647 3:2 
blocking flow done.
Paths: 
1<-0
3<-2
Raising flows... Path:
Node: 1:
0->1 admissible: 1(c_p = -49, residual: 1)
Iteration finished. Final excess: 0
#0 (500, supply: 1):	
    OUT:
        1 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
#1 (450, supply: 0):	
    OUT:
        2 (w: 1;  f: 1;  c: 1;  l: 0)
        3 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
        0 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
#2 (450, supply: 0):	
    OUT:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        3 (w: 1;  f: 0;  c: 1;  l: 0)
    IN:
        0 (w: 100;  f: 0;  c: 1;  l: 0)
        1 (w: 1;  f: 1;  c: 1;  l: 0)
#3 (400, supply: -1):	
    OUT:
    IN:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        2 (w: 1;  f: 0;  c: 1;  l: 0)
Node: 3:
2->1 admissible: 0(c_p = 100, residual: 1)
2->3 admissible: 1(c_p = -49, residual: 1)
Iteration finished. Final excess: 2
#0 (500, supply: 1):	
    OUT:
        1 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
#1 (450, supply: 0):	
    OUT:
        2 (w: 1;  f: 1;  c: 1;  l: 0)
        3 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
        0 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
#2 (450, supply: 0):	
    OUT:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        3 (w: 1;  f: 1;  c: 1;  l: 0)
    IN:
        0 (w: 100;  f: 0;  c: 1;  l: 0)
        1 (w: 1;  f: 1;  c: 1;  l: 0)
#3 (400, supply: -1):	
    OUT:
    IN:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        2 (w: 1;  f: 1;  c: 1;  l: 0)
Calculate excesses...
excesses: 0:0 1:0 2:0 3:0 
deficits: 0:0 1:0 2:0 3:0 
New iteration: e = 12.5
#0 (500, supply: 1):	
    OUT:
        1 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
#1 (450, supply: 0):	
    OUT:
        2 (w: 1;  f: 1;  c: 1;  l: 0)
        3 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
        0 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
#2 (450, supply: 0):	
    OUT:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        3 (w: 1;  f: 1;  c: 1;  l: 0)
    IN:
        0 (w: 100;  f: 0;  c: 1;  l: 0)
        1 (w: 1;  f: 1;  c: 1;  l: 0)
#3 (400, supply: -1):	
    OUT:
    IN:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        2 (w: 1;  f: 1;  c: 1;  l: 0)
0->1 admissible: 0(c_p = -49, residual: 0)
c_p(0,1) = -49
0->2 admissible: 0(c_p = 50, residual: 1)
c_p(0,2) = 50
1->2 admissible: 0(c_p = 1, residual: 0)
c_p(1,2) = 1
1->3 admissible: 0(c_p = 50, residual: 1)
c_p(1,3) = 50
2->1 admissible: 0(c_p = 100, residual: 1)
c_p(2,1) = 100
2->3 admissible: 0(c_p = -49, residual: 0)
c_p(2,3) = -49
Inverted:
1<-0 admissible: 0(c_p = 49, residual: 1)
c_p(0,1) = 51
1<-2 admissible: 0(c_p = -100, residual: 0)
c_p(2,1) = 100
2<-0 admissible: 0(c_p = -50, residual: 0)
c_p(0,2) = 150
2<-1 admissible: 1(c_p = -1, residual: 1)
c_p(1,2) = 1
3<-1 admissible: 0(c_p = -50, residual: 0)
c_p(1,3) = 150
3<-2 admissible: 0(c_p = 49, residual: 1)
c_p(2,3) = 51
Calculate excesses...
excesses: 0:0 1:1 2:0 3:0 
deficits: 0:0 1:0 2:1 3:0 
Raise potentials...
got new forward residual edge: 1->2 length: 2
got new forward residual edge: 1->3 length: 5
got new backward residual edge: 0<-1 length: 5 c_p:49
got new forward residual edge: 0->2 length: 5
Shortest path done. MaxLength = 2
0:5 1:0 2:2 3:5 
  DFS 1:
1->2 admissible: 1(c_p = -24, residual: 1)
Blocking flow array: 0:2147483647 1:2147483647 2:1 3:2147483647 
blocking flow done.
Paths: 
2<-1
Raising flows... Path:
Node: 2:
1->2 admissible: 1(c_p = -24, residual: 1)
Iteration finished. Final excess: 1
#0 (500, supply: 1):	
    OUT:
        1 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
#1 (475, supply: 0):	
    OUT:
        2 (w: 1;  f: 1;  c: 1;  l: 0)
        3 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
        0 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
#2 (450, supply: 0):	
    OUT:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        3 (w: 1;  f: 1;  c: 1;  l: 0)
    IN:
        0 (w: 100;  f: 0;  c: 1;  l: 0)
        1 (w: 1;  f: 1;  c: 1;  l: 0)
#3 (400, supply: -1):	
    OUT:
    IN:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        2 (w: 1;  f: 1;  c: 1;  l: 0)
Calculate excesses...
excesses: 0:0 1:0 2:0 3:0 
deficits: 0:0 1:0 2:0 3:0 
New iteration: e = 6.25
#0 (500, supply: 1):	
    OUT:
        1 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
#1 (475, supply: 0):	
    OUT:
        2 (w: 1;  f: 1;  c: 1;  l: 0)
        3 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
        0 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
#2 (450, supply: 0):	
    OUT:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        3 (w: 1;  f: 1;  c: 1;  l: 0)
    IN:
        0 (w: 100;  f: 0;  c: 1;  l: 0)
        1 (w: 1;  f: 1;  c: 1;  l: 0)
#3 (400, supply: -1):	
    OUT:
    IN:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        2 (w: 1;  f: 1;  c: 1;  l: 0)
0->1 admissible: 0(c_p = -24, residual: 0)
c_p(0,1) = -24
0->2 admissible: 0(c_p = 50, residual: 1)
c_p(0,2) = 50
1->2 admissible: 0(c_p = -24, residual: 0)
c_p(1,2) = -24
1->3 admissible: 0(c_p = 25, residual: 1)
c_p(1,3) = 25
2->1 admissible: 0(c_p = 125, residual: 1)
c_p(2,1) = 125
2->3 admissible: 0(c_p = -49, residual: 0)
c_p(2,3) = -49
Inverted:
1<-0 admissible: 0(c_p = 24, residual: 1)
c_p(0,1) = 26
1<-2 admissible: 0(c_p = -125, residual: 0)
c_p(2,1) = 75
2<-0 admissible: 0(c_p = -50, residual: 0)
c_p(0,2) = 150
2<-1 admissible: 0(c_p = 24, residual: 1)
c_p(1,2) = 26
3<-1 admissible: 0(c_p = -25, residual: 0)
c_p(1,3) = 175
3<-2 admissible: 0(c_p = 49, residual: 1)
c_p(2,3) = 51
Calculate excesses...
excesses: 0:0 1:0 2:0 3:0 
deficits: 0:0 1:0 2:0 3:0 
New iteration: e = 3.125
#0 (500, supply: 1):	
    OUT:
        1 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
#1 (475, supply: 0):	
    OUT:
        2 (w: 1;  f: 1;  c: 1;  l: 0)
        3 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
        0 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
#2 (450, supply: 0):	
    OUT:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        3 (w: 1;  f: 1;  c: 1;  l: 0)
    IN:
        0 (w: 100;  f: 0;  c: 1;  l: 0)
        1 (w: 1;  f: 1;  c: 1;  l: 0)
#3 (400, supply: -1):	
    OUT:
    IN:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        2 (w: 1;  f: 1;  c: 1;  l: 0)
0->1 admissible: 0(c_p = -24, residual: 0)
c_p(0,1) = -24
0->2 admissible: 0(c_p = 50, residual: 1)
c_p(0,2) = 50
1->2 admissible: 0(c_p = -24, residual: 0)
c_p(1,2) = -24
1->3 admissible: 0(c_p = 25, residual: 1)
c_p(1,3) = 25
2->1 admissible: 0(c_p = 125, residual: 1)
c_p(2,1) = 125
2->3 admissible: 0(c_p = -49, residual: 0)
c_p(2,3) = -49
Inverted:
1<-0 admissible: 0(c_p = 24, residual: 1)
c_p(0,1) = 26
1<-2 admissible: 0(c_p = -125, residual: 0)
c_p(2,1) = 75
2<-0 admissible: 0(c_p = -50, residual: 0)
c_p(0,2) = 150
2<-1 admissible: 0(c_p = 24, residual: 1)
c_p(1,2) = 26
3<-1 admissible: 0(c_p = -25, residual: 0)
c_p(1,3) = 175
3<-2 admissible: 0(c_p = 49, residual: 1)
c_p(2,3) = 51
Calculate excesses...
excesses: 0:0 1:0 2:0 3:0 
deficits: 0:0 1:0 2:0 3:0 
New iteration: e = 1.5625
#0 (500, supply: 1):	
    OUT:
        1 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
#1 (475, supply: 0):	
    OUT:
        2 (w: 1;  f: 1;  c: 1;  l: 0)
        3 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
        0 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
#2 (450, supply: 0):	
    OUT:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        3 (w: 1;  f: 1;  c: 1;  l: 0)
    IN:
        0 (w: 100;  f: 0;  c: 1;  l: 0)
        1 (w: 1;  f: 1;  c: 1;  l: 0)
#3 (400, supply: -1):	
    OUT:
    IN:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        2 (w: 1;  f: 1;  c: 1;  l: 0)
0->1 admissible: 0(c_p = -24, residual: 0)
c_p(0,1) = -24
0->2 admissible: 0(c_p = 50, residual: 1)
c_p(0,2) = 50
1->2 admissible: 0(c_p = -24, residual: 0)
c_p(1,2) = -24
1->3 admissible: 0(c_p = 25, residual: 1)
c_p(1,3) = 25
2->1 admissible: 0(c_p = 125, residual: 1)
c_p(2,1) = 125
2->3 admissible: 0(c_p = -49, residual: 0)
c_p(2,3) = -49
Inverted:
1<-0 admissible: 0(c_p = 24, residual: 1)
c_p(0,1) = 26
1<-2 admissible: 0(c_p = -125, residual: 0)
c_p(2,1) = 75
2<-0 admissible: 0(c_p = -50, residual: 0)
c_p(0,2) = 150
2<-1 admissible: 0(c_p = 24, residual: 1)
c_p(1,2) = 26
3<-1 admissible: 0(c_p = -25, residual: 0)
c_p(1,3) = 175
3<-2 admissible: 0(c_p = 49, residual: 1)
c_p(2,3) = 51
Calculate excesses...
excesses: 0:0 1:0 2:0 3:0 
deficits: 0:0 1:0 2:0 3:0 
New iteration: e = 0.78125
#0 (500, supply: 1):	
    OUT:
        1 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
#1 (475, supply: 0):	
    OUT:
        2 (w: 1;  f: 1;  c: 1;  l: 0)
        3 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
        0 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
#2 (450, supply: 0):	
    OUT:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        3 (w: 1;  f: 1;  c: 1;  l: 0)
    IN:
        0 (w: 100;  f: 0;  c: 1;  l: 0)
        1 (w: 1;  f: 1;  c: 1;  l: 0)
#3 (400, supply: -1):	
    OUT:
    IN:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        2 (w: 1;  f: 1;  c: 1;  l: 0)
0->1 admissible: 0(c_p = -24, residual: 0)
c_p(0,1) = -24
0->2 admissible: 0(c_p = 50, residual: 1)
c_p(0,2) = 50
1->2 admissible: 0(c_p = -24, residual: 0)
c_p(1,2) = -24
1->3 admissible: 0(c_p = 25, residual: 1)
c_p(1,3) = 25
2->1 admissible: 0(c_p = 125, residual: 1)
c_p(2,1) = 125
2->3 admissible: 0(c_p = -49, residual: 0)
c_p(2,3) = -49
Inverted:
1<-0 admissible: 0(c_p = 24, residual: 1)
c_p(0,1) = 26
1<-2 admissible: 0(c_p = -125, residual: 0)
c_p(2,1) = 75
2<-0 admissible: 0(c_p = -50, residual: 0)
c_p(0,2) = 150
2<-1 admissible: 0(c_p = 24, residual: 1)
c_p(1,2) = 26
3<-1 admissible: 0(c_p = -25, residual: 0)
c_p(1,3) = 175
3<-2 admissible: 0(c_p = 49, residual: 1)
c_p(2,3) = 51
Calculate excesses...
excesses: 0:0 1:0 2:0 3:0 
deficits: 0:0 1:0 2:0 3:0 
New iteration: e = 0.390625
#0 (500, supply: 1):	
    OUT:
        1 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
#1 (475, supply: 0):	
    OUT:
        2 (w: 1;  f: 1;  c: 1;  l: 0)
        3 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
        0 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
#2 (450, supply: 0):	
    OUT:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        3 (w: 1;  f: 1;  c: 1;  l: 0)
    IN:
        0 (w: 100;  f: 0;  c: 1;  l: 0)
        1 (w: 1;  f: 1;  c: 1;  l: 0)
#3 (400, supply: -1):	
    OUT:
    IN:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        2 (w: 1;  f: 1;  c: 1;  l: 0)
0->1 admissible: 0(c_p = -24, residual: 0)
c_p(0,1) = -24
0->2 admissible: 0(c_p = 50, residual: 1)
c_p(0,2) = 50
1->2 admissible: 0(c_p = -24, residual: 0)
c_p(1,2) = -24
1->3 admissible: 0(c_p = 25, residual: 1)
c_p(1,3) = 25
2->1 admissible: 0(c_p = 125, residual: 1)
c_p(2,1) = 125
2->3 admissible: 0(c_p = -49, residual: 0)
c_p(2,3) = -49
Inverted:
1<-0 admissible: 0(c_p = 24, residual: 1)
c_p(0,1) = 26
1<-2 admissible: 0(c_p = -125, residual: 0)
c_p(2,1) = 75
2<-0 admissible: 0(c_p = -50, residual: 0)
c_p(0,2) = 150
2<-1 admissible: 0(c_p = 24, residual: 1)
c_p(1,2) = 26
3<-1 admissible: 0(c_p = -25, residual: 0)
c_p(1,3) = 175
3<-2 admissible: 0(c_p = 49, residual: 1)
c_p(2,3) = 51
Calculate excesses...
excesses: 0:0 1:0 2:0 3:0 
deficits: 0:0 1:0 2:0 3:0 
#0 (500, supply: 1):	
    OUT:
        1 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
#1 (475, supply: 0):	
    OUT:
        2 (w: 1;  f: 1;  c: 1;  l: 0)
        3 (w: 100;  f: 0;  c: 1;  l: 0)
    IN:
        0 (w: 1;  f: 1;  c: 1;  l: 0)
        2 (w: 100;  f: 0;  c: 1;  l: 0)
#2 (450, supply: 0):	
    OUT:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        3 (w: 1;  f: 1;  c: 1;  l: 0)
    IN:
        0 (w: 100;  f: 0;  c: 1;  l: 0)
        1 (w: 1;  f: 1;  c: 1;  l: 0)
#3 (400, supply: -1):	
    OUT:
    IN:
        1 (w: 100;  f: 0;  c: 1;  l: 0)
        2 (w: 1;  f: 1;  c: 1;  l: 0)
Running unit tests
Loading answers from ../../data/tests/sol/small_1.lgf
Answers loaded
Flow check successful
